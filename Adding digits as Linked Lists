# Definition for singly-linked list.
class ListNode:
     def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def addTwoNumbers(self, l1,l2):
        count=1
        current_node=l1
        while current_node.next!=None:
            count+=1
            current_node=current_node.next
        current_node1=l1
        current_node2=l2
        sum=0
        for i in range(count):
            while current_node1 is not None:
                if current_node1.val+current_node2.val<10 :
                    sum=sum*10+current_node1.val+current_node2.val
                else:
                    dummy=current_node1.val+current_node2.val
                    num=dummy%10
                    carry=int((dummy-num)/10)
                    sum=(sum)*10+current_node1.val+current_node2.val
                current_node1 = current_node1.next
                current_node2 = current_node2.next
            return sum




l1=ListNode(1)
l1.next=ListNode(2)
l1.next.next=ListNode(3)
l2=ListNode(4)
l2.next=ListNode(5)
l2.next.next=ListNode(9)

result=Solution()
print(result.addTwoNumbers(l1,l2))
